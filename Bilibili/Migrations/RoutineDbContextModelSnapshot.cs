// <auto-generated />
using System;
using Bilibili.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Bilibili.Migrations
{
    [DbContext(typeof(RoutineDbContext))]
    partial class RoutineDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0");

            modelBuilder.Entity("Bilibili.Entities.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Introduction")
                        .HasColumnType("TEXT")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f3055f0a-2df1-4f39-8033-c3bd133a15eb"),
                            Introduction = "Great Company",
                            Name = "Mirstorft"
                        },
                        new
                        {
                            Id = new Guid("81f2c7e3-f01f-41c1-924d-05bee1bbfa38"),
                            Introduction = "Bad Company",
                            Name = "google"
                        },
                        new
                        {
                            Id = new Guid("bb2bde7c-83f4-4cc9-aca0-c260348230cf"),
                            Introduction = "FuBao Company",
                            Name = "Alibaba"
                        });
                });

            modelBuilder.Entity("Bilibili.Entities.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmployeeNo")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(10);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<int>("Gender")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bd345541-4271-47ab-95f4-0e78468de258"),
                            CompanyId = new Guid("f3055f0a-2df1-4f39-8033-c3bd133a15eb"),
                            DateOfBirth = new DateTime(1986, 11, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeNo = "M001",
                            FirstName = "Mary",
                            Gender = 2,
                            LastName = "king"
                        },
                        new
                        {
                            Id = new Guid("8b00569e-2263-4cf2-aa5f-b14f5de7d90d"),
                            CompanyId = new Guid("f3055f0a-2df1-4f39-8033-c3bd133a15eb"),
                            DateOfBirth = new DateTime(1989, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeNo = "M002",
                            FirstName = "Dave",
                            Gender = 1,
                            LastName = "Bob"
                        },
                        new
                        {
                            Id = new Guid("7bb9215b-83b5-444a-b96c-13e4a47c8a45"),
                            CompanyId = new Guid("f3055f0a-2df1-4f39-8033-c3bd133a15eb"),
                            DateOfBirth = new DateTime(1960, 11, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeNo = "M003",
                            FirstName = "Keya",
                            Gender = 1,
                            LastName = "Noer"
                        },
                        new
                        {
                            Id = new Guid("7363e32b-5ff5-4ae0-8c66-66f94ffdfba5"),
                            CompanyId = new Guid("81f2c7e3-f01f-41c1-924d-05bee1bbfa38"),
                            DateOfBirth = new DateTime(1988, 11, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeNo = "G001",
                            FirstName = "Mars",
                            Gender = 2,
                            LastName = "Lodfa"
                        },
                        new
                        {
                            Id = new Guid("e4d51c62-2f63-4fe1-9570-1ac6cd9e1c5c"),
                            CompanyId = new Guid("81f2c7e3-f01f-41c1-924d-05bee1bbfa38"),
                            DateOfBirth = new DateTime(1990, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeNo = "G002",
                            FirstName = "Nasew",
                            Gender = 1,
                            LastName = "Pax"
                        },
                        new
                        {
                            Id = new Guid("6aac2b6c-ed10-417e-82af-9b54589e1d28"),
                            CompanyId = new Guid("81f2c7e3-f01f-41c1-924d-05bee1bbfa38"),
                            DateOfBirth = new DateTime(2000, 11, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeNo = "G003",
                            FirstName = "Perter",
                            Gender = 1,
                            LastName = "Bumars"
                        },
                        new
                        {
                            Id = new Guid("3076aed0-2d87-48b8-9ff1-bd18e9e2d298"),
                            CompanyId = new Guid("bb2bde7c-83f4-4cc9-aca0-c260348230cf"),
                            DateOfBirth = new DateTime(1992, 11, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeNo = "A001",
                            FirstName = "张",
                            Gender = 2,
                            LastName = "三"
                        },
                        new
                        {
                            Id = new Guid("f718283a-0243-478d-9f26-4a3c0a268eaf"),
                            CompanyId = new Guid("bb2bde7c-83f4-4cc9-aca0-c260348230cf"),
                            DateOfBirth = new DateTime(1990, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeNo = "A002",
                            FirstName = "李",
                            Gender = 1,
                            LastName = "四"
                        },
                        new
                        {
                            Id = new Guid("86e1a7eb-ec30-482e-bb87-891c7355c8a7"),
                            CompanyId = new Guid("bb2bde7c-83f4-4cc9-aca0-c260348230cf"),
                            DateOfBirth = new DateTime(1999, 11, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeNo = "A003",
                            FirstName = "王",
                            Gender = 1,
                            LastName = "五"
                        });
                });

            modelBuilder.Entity("Bilibili.Entities.Employee", b =>
                {
                    b.HasOne("Bilibili.Entities.Company", "Company")
                        .WithMany("Employees")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
